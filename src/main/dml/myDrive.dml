package pt.tecnico.myDrive.domain;

class MyDriveManager;

class File{
	Integer id;
	String filename;
	DateTime lastModified;
	String ownerPermissions;
	String othersPermissions;
}


class PlainFile extends File{
	String content;
}

class LinkFile extends PlainFile;
class AppFile extends PlainFile;
class Directory extends File;

class User{
	String username;
	String password;
	String name;
	String umask;
}

class Root extends User;

class FileSystem;

relation FileHasOwner{
    File playsRole file{
		multiplicity 1..1;
    }

    User playsRole owner{
        multiplicity 1..1;
    }
}


relation FileSystemHasFiles{
	
    FileSystem playsRole filesystem {
        multiplicity 1..1;
    }
    File playsRole slash{
		multiplicity 1..1;
    }
}

relation MyDriveManagerHasCurrentDirectoryy{
	
    MyDriveManager playsRole mydrivemanager {
        multiplicity 1..1;
    }
    Directory playsRole currentDirectory{
		multiplicity 1..1;
    }
}

relation FileSystemHasUsers{
	
    FileSystem playsRole filesystem {
        multiplicity 1..1;
    }
    User playsRole users{
	multiplicity 1..*;
    }
}

relation MyDriveManagerHasCurrentUser{
	
    MyDriveManager playsRole mydrivemanager {
        multiplicity 1..1;
    }
    User playsRole currentUser{
		multiplicity 1..1;
    }
}
	
relation UserHasHomeDirectory{

    User playsRole user{
		multiplicity 1..1;
    }
	
    Directory playsRole homeDirectory{
        multiplicity 1..1;
    }
}	


relation DirectoryHasFiles{
	
    Directory playsRole directory {
        multiplicity 1..1;
    }
    
    File playsRole files {
        multiplicity 2..*;
    }
}

relation MyDriveManagerApplicationHasFileSystem{
	
    MyDriveManager playsRole mydrivemanager{
		multiplicity 1..1;
    }
    
    FileSystem playsRole filesystem {
        multiplicity 1..1;
    }
    
}

	
relation DomainRootHasMyDriveManager {
  .pt.ist.fenixframework.DomainRoot playsRole rootFenix {
    multiplicity 0..1;
  }
  MyDriveManager playsRole mydrivemanager  {
    multiplicity 0..1;
  }
}
